random_switch (FEAT_SHIPS, SELF, ${ship.id}_switch_graphics_ship) {
    <tal:random_graphics_variations repeat="variant ship.model_variants">
        1: return ${ship.id}_switch_graphics_${variant.spritesheet_suffix};
    </tal:random_graphics_variations>
}

<!--! !! wake will need y offset templating according to ship length -->
spriteset(${ship.id}_ss_wake, "src/graphics/wakes/${ship.hull.wake_name}.png") {
  spriteset_template_wake_${ship.id}(10)
}

switch (FEAT_SHIPS, SELF, ${ship.id}_switch_graphics_ship_not_moving, STORE_TEMP(PALETTE_USE_DEFAULT, 0x100)) {
    return ${ship.id}_switch_graphics_ship;
}
switch (FEAT_SHIPS, SELF, ${ship.id}_switch_graphics_ship_moving, STORE_TEMP(CB_FLAG_MORE_SPRITES | PALETTE_USE_DEFAULT, 0x100)) {
    return ${ship.id}_switch_graphics_ship;
}
switch (FEAT_SHIPS, SELF, ${ship.id}_switch_graphics_wake, STORE_TEMP(PALETTE_USE_DEFAULT, 0x100)) {
    return ${ship.id}_ss_wake;
}

switch (FEAT_SHIPS, SELF, ${ship.id}_switch_graphics_moving, getbits(extra_callback_info1, 8, 8)) {
    0: return ${ship.id}_switch_graphics_ship_moving;
    return ${ship.id}_switch_graphics_wake;
}

switch (FEAT_SHIPS, SELF, ${ship.id}_switch_graphics, current_speed) {
    0: return ${ship.id}_switch_graphics_ship_not_moving;
    return ${ship.id}_switch_graphics_moving;
}
